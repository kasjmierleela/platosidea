let rand' s a b = scale a b $ slow s $ rand
    sine' s a b = scale a b $ slow s $ sine1

let samplset = "eacu6"

cps 0.5

d1 $
spin 2 $
juxBy 0.9 (slow 2) $
superimpose (slowspread slow [3, 4] . (#vowel "{a e i o u}%3") . (|*| speed "0.5")) $
sometimes (slowspread chop [2, 8, 4] . slow 2) $
(
slow 32 $ slowspread (\x -> slowspread (striate' x) [(1/2), (1/4), (1/2), (1/8)]) [32, 64] $
interlace
(
  stack [
  foldEvery [3, 4] (0.25 <~) $ degradeBy 0.5 $ s samplset #n "0" #cut "1",
  foldEvery [3, 4] (0.5 <~) $ degradeBy 0.95 $ s samplset #n "1" #cut "2",
  foldEvery [4, 5] (0.25 <~) $ degradeBy 0.5 $ s samplset #n "2" #cut "3",
  foldEvery [4, 5] (0.5 <~) $ degradeBy 0.5 $ s samplset #n "3" #cut "4"
  ]
)
(
  slowcat [
  foldEvery [3, 4] (0.25 <~) $ degradeBy 0.5 $ s samplset #n "0" #cut "5",
  foldEvery [3, 4] (0.5 <~) $ degradeBy 0.95 $ s samplset #n "1" #cut "6",
  foldEvery [4, 5] (0.25 <~) $ degradeBy 0.5 $ s samplset #n "2" #cut "7",
  foldEvery [4, 5] (0.5 <~) $ degradeBy 0.5 $ s samplset #n "3" #cut "8"
  ]
)
)#speed "{1 1 1 1 2/4, ~ ~ 0.25/3 ~}%3"
#cutoff (rand' 1.2 1000 3000)
#delaytime (slow 16 "{0.25 0.5 1 0.5}%3")
#delay (rand' 1.4 0.1 0.3)
#delayfeedback (rand' 1.5 0.2 0.4)
#shape (sine' 16 0.1 0.9)
#crush (slow 7 "16 12 11/2 10 8/3 7/7")
